// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import URLQueryEncoder

extension APIEndpoint.V1.ReviewSubmissions {
	public func id(_ id: String) -> WithID {
		WithID(path: "\(path)/\(id)")
	}

	public struct WithID {
		/// Path: `/v1/reviewSubmissions/{id}`
		public let path: String

		public func get(parameters: GetParameters? = nil) -> Request<AppStoreConnect_Swift_SDK.ReviewSubmissionResponse> {
			Request(method: "GET", path: path, query: parameters?.asQuery, id: "reviewSubmissions-get_instance")
		}

		public struct GetParameters {
			public var fieldsReviewSubmissions: [FieldsReviewSubmissions]?
			public var include: [Include]?
			public var fieldsReviewSubmissionItems: [FieldsReviewSubmissionItems]?
			public var limitItems: Int?

			public enum FieldsReviewSubmissions: String, Codable, CaseIterable, Hashable, Sendable {
				case app
				case appStoreVersionForReview
				case canceled
				case items
				case lastUpdatedByActor
				case platform
				case state
				case submitted
				case submittedByActor
				case submittedDate
			}

			public enum Include: String, Codable, CaseIterable, Hashable, Sendable {
				case app
				case appStoreVersionForReview
				case items
				case lastUpdatedByActor
				case submittedByActor
			}

			public enum FieldsReviewSubmissionItems: String, Codable, CaseIterable, Hashable, Sendable {
				case appCustomProductPageVersion
				case appEvent
				case appStoreVersion
				case appStoreVersionExperiment
				case appStoreVersionExperimentV2
				case removed
				case resolved
				case reviewSubmission
				case state
			}

			public init(fieldsReviewSubmissions: [FieldsReviewSubmissions]? = nil, include: [Include]? = nil, fieldsReviewSubmissionItems: [FieldsReviewSubmissionItems]? = nil, limitItems: Int? = nil) {
				self.fieldsReviewSubmissions = fieldsReviewSubmissions
				self.include = include
				self.fieldsReviewSubmissionItems = fieldsReviewSubmissionItems
				self.limitItems = limitItems
			}

			public var asQuery: [(String, String?)] {
				let encoder = URLQueryEncoder(explode: false)
				encoder.encode(fieldsReviewSubmissions, forKey: "fields[reviewSubmissions]")
				encoder.encode(include, forKey: "include")
				encoder.encode(fieldsReviewSubmissionItems, forKey: "fields[reviewSubmissionItems]")
				encoder.encode(limitItems, forKey: "limit[items]")
				return encoder.items
			}
		}

		public func patch(_ body: AppStoreConnect_Swift_SDK.ReviewSubmissionUpdateRequest) -> Request<AppStoreConnect_Swift_SDK.ReviewSubmissionResponse> {
			Request(method: "PATCH", path: path, body: body, id: "reviewSubmissions-update_instance")
		}
	}
}
