// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct CiBuildRunCreateRequest: Codable, Hashable, Sendable {
	public var data: Data

	public struct Data: Codable, Hashable, Sendable {
		public var type: `Type`
		public var attributes: Attributes?
		public var relationships: Relationships?

		public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
			case ciBuildRuns
		}

		public struct Attributes: Codable, Hashable, Sendable {
			public var isClean: Bool?

			public init(isClean: Bool? = nil) {
				self.isClean = isClean
			}

			private enum CodingKeys: String, CodingKey {
				case isClean = "clean"
			}
		}

		public struct Relationships: Codable, Hashable, Sendable {
			public var buildRun: BuildRun?
			public var workflow: Workflow?
			public var sourceBranchOrTag: SourceBranchOrTag?
			public var pullRequest: PullRequest?

			public struct BuildRun: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case ciBuildRuns
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public struct Workflow: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case ciWorkflows
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public struct SourceBranchOrTag: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case scmGitReferences
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public struct PullRequest: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case scmPullRequests
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public init(buildRun: BuildRun? = nil, workflow: Workflow? = nil, sourceBranchOrTag: SourceBranchOrTag? = nil, pullRequest: PullRequest? = nil) {
				self.buildRun = buildRun
				self.workflow = workflow
				self.sourceBranchOrTag = sourceBranchOrTag
				self.pullRequest = pullRequest
			}
		}

		public init(type: `Type`, attributes: Attributes? = nil, relationships: Relationships? = nil) {
			self.type = type
			self.attributes = attributes
			self.relationships = relationships
		}
	}

	public init(data: Data) {
		self.data = data
	}
}
