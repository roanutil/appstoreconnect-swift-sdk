// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct AppScreenshotSetCreateRequest: Codable, Hashable, Sendable {
	public var data: Data

	public struct Data: Codable, Hashable, Sendable {
		public var type: `Type`
		public var attributes: Attributes
		public var relationships: Relationships?

		public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
			case appScreenshotSets
		}

		public struct Attributes: Codable, Hashable, Sendable {
			public var screenshotDisplayType: ScreenshotDisplayType

			public init(screenshotDisplayType: ScreenshotDisplayType) {
				self.screenshotDisplayType = screenshotDisplayType
			}
		}

		public struct Relationships: Codable, Hashable, Sendable {
			public var appStoreVersionLocalization: AppStoreVersionLocalization?
			public var appCustomProductPageLocalization: AppCustomProductPageLocalization?
			public var appStoreVersionExperimentTreatmentLocalization: AppStoreVersionExperimentTreatmentLocalization?

			public struct AppStoreVersionLocalization: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case appStoreVersionLocalizations
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public struct AppCustomProductPageLocalization: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case appCustomProductPageLocalizations
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public struct AppStoreVersionExperimentTreatmentLocalization: Codable, Hashable, Sendable {
				public var data: Data?

				public struct Data: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case appStoreVersionExperimentTreatmentLocalizations
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: Data? = nil) {
					self.data = data
				}
			}

			public init(appStoreVersionLocalization: AppStoreVersionLocalization? = nil, appCustomProductPageLocalization: AppCustomProductPageLocalization? = nil, appStoreVersionExperimentTreatmentLocalization: AppStoreVersionExperimentTreatmentLocalization? = nil) {
				self.appStoreVersionLocalization = appStoreVersionLocalization
				self.appCustomProductPageLocalization = appCustomProductPageLocalization
				self.appStoreVersionExperimentTreatmentLocalization = appStoreVersionExperimentTreatmentLocalization
			}
		}

		public init(type: `Type`, attributes: Attributes, relationships: Relationships? = nil) {
			self.type = type
			self.attributes = attributes
			self.relationships = relationships
		}
	}

	public init(data: Data) {
		self.data = data
	}
}
