// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation

public struct BetaTesterCreateRequest: Codable, Hashable, Sendable {
	public var data: Data

	public struct Data: Codable, Hashable, Sendable {
		public var type: `Type`
		public var attributes: Attributes
		public var relationships: Relationships?

		public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
			case betaTesters
		}

		public struct Attributes: Codable, Hashable, Sendable {
			public var firstName: String?
			public var lastName: String?
			public var email: String

			public init(firstName: String? = nil, lastName: String? = nil, email: String) {
				self.firstName = firstName
				self.lastName = lastName
				self.email = email
			}
		}

		public struct Relationships: Codable, Hashable, Sendable {
			public var betaGroups: BetaGroups?
			public var builds: Builds?

			public struct BetaGroups: Codable, Hashable, Sendable {
				public var data: [Datum]?

				public struct Datum: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case betaGroups
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: [Datum]? = nil) {
					self.data = data
				}
			}

			public struct Builds: Codable, Hashable, Sendable {
				public var data: [Datum]?

				public struct Datum: Codable, Hashable, Identifiable, Sendable {
					public var type: `Type`
					public var id: String

					public enum `Type`: String, Codable, CaseIterable, Hashable, Sendable {
						case builds
					}

					public init(type: `Type`, id: String) {
						self.type = type
						self.id = id
					}
				}

				public init(data: [Datum]? = nil) {
					self.data = data
				}
			}

			public init(betaGroups: BetaGroups? = nil, builds: Builds? = nil) {
				self.betaGroups = betaGroups
				self.builds = builds
			}
		}

		public init(type: `Type`, attributes: Attributes, relationships: Relationships? = nil) {
			self.type = type
			self.attributes = attributes
			self.relationships = relationships
		}
	}

	public init(data: Data) {
		self.data = data
	}
}
